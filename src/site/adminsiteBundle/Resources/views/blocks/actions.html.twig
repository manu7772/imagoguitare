{% macro entiteButtons(entite, actions, type, type_value_joiner) %}
	{% import _self as self %}
	<div class="btn-group">
	{% for action in actions %}
		{{ self.entiteButton(entite, action, type) }}
	{% endfor %}
	</div>
{% endmacro %}

{% macro adminHref(path) -%}
	{%- if 'localhost' == app.request.headers.get('host') -%}
		href="{{ path(path|default('siteadmin_homepage')) }}" target="_blank" 
	{%- else -%}
		{% set prefix = 'admin' %}
		{% if app.request.headers.get('host') matches '#^((http|https)://)?test(admin)?\.#' %}
			{% set prefix = 'testadmin' %}
		{% endif %}
		href="{{ site_domains[prefix].reseau|default('http://') }}{{ site_domains[prefix].prefix }}.{{ site_domains[prefix].domain }}.{{ site_domains[prefix].extensions[0] }}{{ path|default('') }}" target="_blank" 
	{%- endif -%}
{%- endmacro %}

{% macro publicHref(path) -%}
	{%- if 'localhost' == app.request.headers.get('host') -%}
		href="{{ path(path|default('sitesite_homepage')) }}" target="_blank" 
	{%- else -%}
		{% set prefix = 'public' %}
		{% if app.request.headers.get('host') matches '#^((http|https)://)?test(admin)?\.#' %}
			{% set prefix = 'test' %}
		{% endif %}
		href="{{ site_domains[prefix].reseau|default('http://') }}{{ site_domains[prefix].prefix }}.{{ site_domains[prefix].domain }}.{{ site_domains[prefix].extensions[0] }}{{ path|default('') }}" target="_blank" 
	{%- endif -%}
{%- endmacro %}

{% macro entiteButton(entite, action, select, type_value_joiner) %}
	{% import _self as self %}
	{% if action == "list" %}
		<a href="{{ self.entiteLink(entite, action, select) }}" type="button" class="btn btn-white btn-xs" data-toggle="tooltip" data-placement="bottom" title="{{ UCfirst('backlist'|trans({}, entite.shortName)) }}"><i class="fa fa-bars icon-wait-on-click"></i></a>
	{% endif %}
	{% if action == "create" and entite.shortName not in ['facture'] %}
		<a href="{{ self.entiteLink(entite, action, select) }}" type="button" class="btn btn-white btn-xs" data-toggle="tooltip" data-placement="bottom" title="{{ UCfirst('create'|trans({}, entite.shortName)) }}"><i class="fa fa-plus icon-wait-on-click"></i></a>
	{% endif %}
	{% if action == "show" %}
		<a href="{{ self.entiteLink(entite, action, select) }}" type="button" class="btn btn-white btn-xs" data-toggle="tooltip" data-placement="bottom" title="{{ UCfirst('moredetails'|trans({'%name%': entite.nom|default(entite.id)}, entite.shortName)) }}"><i class="fa fa-eye icon-wait-on-click"></i></a>
	{% endif %}
	{% if action == "edit" and entite.shortName not in ['facture'] %}
		<a href="{{ self.entiteLink(entite, action, select) }}" type="button" class="btn btn-white btn-xs" data-toggle="tooltip" data-placement="bottom" title="{{ UCfirst('actions.modifier'|trans) }}"><i class="fa fa-pencil icon-wait-on-click"></i></a>
	{% endif %}
	{% if action == "vendable" %}
		{% set defcol = 'white' %}
		{% set state = 'set' %}
		{% if entite.vendable %}
			{% set defcol = 'primary' %}
			{% set state = 'unset' %}
		{% endif %}
		<a href="{{ self.entiteLink(entite, action, select) }}" type="button" class="btn btn-{{ defcol }} btn-xs" data-toggle="tooltip" data-placement="bottom" title="{{ UCfirst(('vendable.' ~ state)|trans) }}"><i class="fa fa-shopping-cart icon-wait-on-click"></i></a>
	{% endif %}
	{% if (action == "delete" and ((entite.deletable|default(true) == true) or (app.environment in ['DEV', 'TEST']) or (is_granted('ROLE_SUPER_ADMIN')))) %}
		{% if entite.shortName not in ['facture'] or entite.state|default(0) == 5 %}
		<a href="{{ self.entiteLink(entite, action, select) }}" type="button" class="btn btn-white btn-xs need-confirmation" data-toggle="tooltip" data-placement="bottom" title="{{ UCfirst('actions.supprimer'|trans) }}" data-title="{{ UCfirst('actions.supprimer'|trans) }}" data-message="{{ UCfirst('actions.suppQuestion'|trans({'%name%': entite.nom|default(entite.id)|trans({}, entite.shortName)})) }}"><i class="fa fa-times icon-wait-on-click"></i></a>
		{% endif %}
	{% endif %}
	{% if action == "default" and entite.default is defined and (entite.statut.niveau|default('IS_AUTHENTICATED_ANONYMOUSLY') in ['IS_AUTHENTICATED_ANONYMOUSLY', 'ROLE_USER']) %}
		{% set defcol = 'white' %}
		{% set disabled = '' %}
		{% if entite.default %}
			{% set defcol = 'primary' %}
			{% if entite.isDefaultNullable|default(false) == false %}{% set disabled = ' disabled="disabled"' %}{% endif %}
		{% endif %}
		<a href="{{ self.entiteLink(entite, action, select) }}"{{ disabled|raw }} type="button" class="btn btn-{{ defcol }} btn-xs" data-toggle="tooltip" data-placement="bottom" title="{{ 'default.bydefault'|trans }}"><i class="fa fa-star icon-wait-on-click"></i></a>
	{% endif %}
	{% if (action == "active" and (entite.statut.slug|default('actif') != 'actif') and (entite.deletable|default(true) == true or (app.environment in ['DEV', 'TEST']) or (is_granted('ROLE_SUPER_ADMIN')))) %}
		<a href="{{ self.entiteLink(entite, action, select) }}" type="button" class="btn btn-white btn-xs" title="{{ UCfirst('actions.activer'|trans) }}"><i class="fa fa-check icon-wait-on-click"></i></a>
	{% endif %}
{% endmacro %}

{% macro entiteLink(entite, action, select, type_value_joiner) -%}
	{% if entite.shortName|default(null) == 'categorie' %}
		{%- if action in ['list'] -%}
			{%- if select.type_values|default(null) != null -%}
				{{- path('siteadmin_list_categorie', {type_related: select.type_related, type_field: select.type_field, type_values: select.type_values|join(type_value_joiner)|url_encode}) -}}
			{%- elseif select.method|default(null) != null -%}
				{{- path('siteadmin_repo_categorie', {method: select.method, repoParams: select.repoParams}) -}}
			{%- else -%}
				{{- path('siteadmin_list_categorie') -}}
			{%- endif -%}
		{%- endif -%}
		{%- if action in ['create'] -%}
			{{- path('siteadmin_create_categorie', {rootParent: entite.id}) -}}
		{%- endif -%}
		{%- if action in ['show','edit'] -%}
			{{- path('siteadmin_' ~ action ~ '_categorie', {id: entite.id}) -}}
		{%- endif -%}
	{% else %}
		{%- if action in ['list'] -%}
			{%- if select.type_values|default(null) != null -%}
				{{- path('siteadmin_entite_type', {entite: entite.shortName, type_related: select.type_related, type_field: select.type_field, type_values: select.type_values|join(type_value_joiner)|url_encode, action: action}) -}}
			{%- else -%}
				{{- path('siteadmin_entite', {entite: entite.shortName, action: action}) -}}
			{%- endif -%}
		{%- endif -%}
		{%- if action in ['create'] -%}
			{%- if select.type_values|default(null) != null -%}
				{{- path('siteadmin_entite_type', {entite: entite, type_related: select.type_related, type_field: select.type_field, type_values: select.type_values|join(type_value_joiner)|url_encode, action: action}) -}}
			{%- else -%}
				{{- path('siteadmin_entite', {entite: entite.shortName, action: action}) -}}
			{%- endif -%}
		{%- endif -%}
		{%- if action in ['show','edit','delete', 'active'] -%}
			{%- if select.type_values|default(null) != null -%}
				{{- path('siteadmin_entite_type', {entite: entite.shortName, type_related: select.type_related, type_field: select.type_field, type_values: select.type_values|join(type_value_joiner)|url_encode, id: entite.id, action: action}) -}}
			{%- else -%}
				{{- path('siteadmin_entite', {entite: entite.shortName, id: entite.id, action: action}) -}}
			{%- endif -%}
		{%- endif -%}
		{%- if action in ['default'] -%}
			{{- path('siteadmin_set_default', {id: entite.id, entite: entite.shortName, redir: path(app.request.attributes.get('_route'), app.request.attributes.get('_route_params'))|url_encode()}) -}}
		{%- endif -%}
		{%- if action in ['vendable'] -%}
			{{- path('siteadmin_set_vendable', {id: entite.id, entite: entite.shortName, redir: path(app.request.attributes.get('_route'), app.request.attributes.get('_route_params'))|url_encode()}) -}}
		{%- endif -%}
	{% endif %}
{%- endmacro %}



{# ############### #}
{# DOTS COLOR      #}
{# ############### #}

{% macro colorDot(color, size) -%}
<span class="fa-stack fa-lg fa-{{ size|default('2x') }}">
	<i class="fa fa-circle fa-stack-{{ size|default('2x') }}" style="color:{{ color|raw }};"></i>
	<i class="fa fa-circle-o fa-stack-{{ size|default('2x') }}"></i>
</span>
{%- endmacro %}

{% macro colorDot2(color, size) -%}
<i class="fa fa-square fa-{{ size|default('3x') }}" style="padding: 0px 2px; border: solid 2px #bbb; border-radius: 9px; color:{{ color|raw }};"></i>
{%- endmacro %}




{# ############### #}
{# ICONS           #}
{# ############### #}

{% macro icon(item) -%}
	{% if item.shortName is defined %}
	{{ item.icon|default(('entite.' ~ item.shortName|default('unknown'))|trans({}, 'icon')) }}
	{% else %}
	{{ ('entite.' ~ item)|trans({}, 'icon') }}
	{% endif %}
{%- endmacro %}

{% macro htmlicon(item, size, classes) -%}
	{% if item.shortName is defined %}
	<i class="fa {{ (item.icon|default('entite.' ~ item.shortName|default('unknown')))|trans({}, 'icon') }} fa-{{ size|default(1) }}x {{ classes|default([])|join(' ') }}"></i>
	{% elseif (item|default('') ~ '') != '' %}
	<i class="fa {{ ('entite.' ~ item)|trans({}, 'icon') }} fa-{{ size|default(1) }}x {{ classes|default([])|join(' ') }}"></i>
	{% else %}
	<i class="fa fa-question fa-{{ size|default(1) }}x {{ classes|default([])|join(' ') }}"></i>
	{% endif %}
{%- endmacro %}


{% macro labelList(list, highlight, classe, limit) -%}
	{% import _self as self %}
	{% set limit = limit|default(0) %}
	{% set classe = classe|default('label-primary') %}
	{% set classeRoot = classeRoot|default('label-warning') %}
	{% for item in list|default([]) %}
		{% if loop.index0 < limit or limit == 0 %}
			{% if item.shortName == 'categorie' and item.lvl|default(null) == 0 %}
			<span id="{{ item.shortName }}_{{ item.id }}" class="sortable-disabled label m-r-xs m-b-xs inline {{ classeRoot|raw }}" style="display: inline-block; height: 20px; line-height: 15px;">
				<i class="fa {{ self.icon(item) }} m-r-xs"></i>
				{{ ('types.' ~ item.type)|trans({}, item.shortName) }}
			</span>
			{% else %}
			<span id="{{ item.shortName }}_{{ item.id }}" class="label m-r-xs m-b-xs inline{% if item in highlight|default([]) %} {{ classe|raw }}{% endif %}" style="display: inline-block; height: 20px; line-height: 15px;">
				<i class="fa {{ self.icon(item) }} m-r-xs"></i>
				{{ item.username|default(item.nom)|trans({}, item.shortName) }}
			</span>
			{% endif %}
		{% elseif loop.index0 == limit %}
		<p>…</p>
		{% endif %}
	{% endfor %}
{%- endmacro %}



{% macro labelLinkList(list, highlight, classe, select, type_value_joiner, action, limit) -%}
	{% if list|default([]) is iterable %}
	{% import _self as self %}
	{% set limit = limit|default(0) %}
	{% set classe = classe|default('label-primary') %}
	{% set classeRoot = classeRoot|default('label-warning') %}
	{% set action = action|default('show') %}
	{% for item in list|default([]) %}
		{% if loop.index0 < limit or limit == 0 %}
			{% if item.shortName == 'categorie' and item.lvl|default(null) == 0 %}
			<a id="{{ item.shortName }}_{{ item.id }}" href="{{ self.entiteLink(item, action, select, type_value_joiner) }}" class="sortable-disabled label inline {{ classeRoot|raw }} m-b-xs m-r-xs" style="display: inline-block; height: 20px; line-height: 15px;" title="{{ ('types.' ~ item.type)|trans({}, item.shortName) }}">
				<i class="fa {{ self.icon(item) }} m-r-xs"></i>
				{{- item.username|default(item.nom)|trans({}, item.shortName) }}
			</a>
			{% else %}
			<a id="{{ item.shortName }}_{{ item.id }}" href="{{ self.entiteLink(item, action, select, type_value_joiner) }}" class="label inline{% if item in highlight|default([]) %} {{ classe|raw }}{% endif %} m-b-xs m-r-xs" style="display: inline-block; height: 20px; line-height: 15px;">
				<i class="fa {{ self.icon(item) }} m-r-xs"></i>
				{{- item.username|default(item.nom)|trans({}, item.shortName) }}
			</a>
			{% endif %}
		{% elseif loop.index0 == limit %}
			<p>…</p>
		{% endif %}
	{% endfor %}
	{% endif %}
{%- endmacro %}



{# ############### #}
{# SORT LISTS      #}
{# ############### #}

{% macro sortSymbol(entite, group) -%}
	<i class="fa fa-unsorted {{ entite.childsByGroup(group)|length > 1 ? 'text-primary' : 'text-muted' }} m-l-sm m-r-sm"></i>
{%- endmacro %}

{% macro sortList(entite, group, classe, select, type_value_joiner, action) -%}
	{% import _self as self %}
	{% set childs = entite.childsByGroup(group) %}
	{% set model = self.labelLinkList(childs, [entite.firstChild(group)], null, select, type_value_joiner, action|default('show'), 0) %} {# IMPORTANT : LIMIT = 0 !! #}
	{% if childs|length > 1 %}
	<div class="sortnested" data-parent="{{ entite.shortName }}_{{ entite.id }}" data-group="{{ group }}" data-url-construct="{{ path('ajax_data_sort_construct') }}" data-url-update="{{ path('ajax_data_sort') }}" data-model="{{ model|json_encode() }}"><i class="fa fa-spin fa-refresh text-muted fa-2x"></i></div>
	{% elseif childs|length > 0 %}
	{{ model|raw }}
	{% else %}
	<p>{{ 'noChildren'|trans({}, 'categorie') }}</p>
	{% endif %}
{%- endmacro %}



{# ############### #}
{# OBJECT VIEWER   #}
{# ############### #}

{% macro objectViewer(service_info, idBlock, showCode) -%}
	{% set idBlock = idBlock|default('id_' ~ random(100000)) %}
	{% set colorsKeys = ['dev','error','valid'] %}
	{% set colors = {dev: 'warning', error: 'danger', valid: 'success'} %}
	{% set showCode = showCode|default(true) %}
	<div class="row">
		<div class="col-md-12">
			<h4><strong>File name : {{ service_info.class.filename|default('?') }}</strong></h4>
			{% for line in service_info.class.comments|default([]) %}
			<p class="m-b-none
				{%- for key,color in colors -%}
				{%- if line matches('#^@' ~ key ~ ' #') %} text-{{ colors[key] }}{% endif -%}
				{%- endfor -%}
				">{{ line|raw }}</p>
			{% endfor %}
		</div>
	</div>
	<div class="panel-body">
		<div class="panel-group" id="{{ idBlock }}_accordion">
			<div class="panel panel-default">
				<div class="panel-heading">
					<h5 class="panel-title">
						<a data-toggle="collapse" data-parent="#{{ idBlock }}_accordion" href="#{{ idBlock }}_collapse_0"><strong>{{ service_info.object.nom|default(service_info.object.shortName|default(service_info.object)) }}</strong></a>
					</h5>
				</div>
				<div id="{{ idBlock }}_collapse_0" class="panel-collapse collapse in">
					<div class="panel-body">
						<p class="m-b-none">• Nom : {{ service_info.object.nom|default(service_info.object.shortName|default(service_info.object)) }}</p>
						<p class="m-b-none">• ClassName : {{ service_info.object.class(false)|default(null) }}</p>
						<p class="m-b-none">• ShortName : {{ service_info.object.class(true)|default(null) }}</p>
					</div>
				</div>
			</div>
			<!-- PANEL CONSTANTS : begin -->
			<div class="panel panel-default">
				<div class="panel-heading">
					<h5 class="panel-title">
						<a data-toggle="collapse" data-parent="#{{ idBlock }}_accordion" href="#{{ idBlock }}_collapse_1"><strong>Constants</strong></a>
					</h5>
				</div>
				<div id="{{ idBlock }}_collapse_1" class="panel-collapse collapse">
					<div class="panel-body">
						<div class="row">
							<div class="col-md-12">
								<!-- TABLE CONSTANTS : begin -->
								<table class="table small table-striped table-bordered table-hover dataTables dataTable dtr-inline" id="DataTables_Table_0" role="grid" aria-describedby="DataTables_Table_0_info">
									<thead>
										<tr>
											<th>Name</th>
										</tr>
									</thead>
									<tbody>
										{% for name,value in service_info.constants %}
										<tr>
											<td><i class="text-muted">{{ service_info.object.nom|default(service_info.object.shortName|default(service_info.object)) }}::</i><strong>{{ name }}</strong> = {{ value|raw|json_encode }}</td>
										</tr>
										{% endfor %}
									</tbody>
								</table>
								<!-- TABLE CONSTANTS : end -->
							</div>
						</div>
					</div>
				</div>
			</div>
			<!-- PANEL CONSTANTS : end -->
			<!-- PANEL PROPERTIES : begin -->
			<div class="panel panel-default">
				<div class="panel-heading">
					<h5 class="panel-title">
						<a data-toggle="collapse" data-parent="#{{ idBlock }}_accordion" href="#{{ idBlock }}_collapse_2"><strong>Properties</strong></a>
					</h5>
				</div>
				<div id="{{ idBlock }}_collapse_2" class="panel-collapse collapse">
					<div class="panel-body">
						<div class="row">
							<div class="col-md-12">
								<!-- TABLE PROPERTIES : begin -->
								<table class="table small table-striped table-bordered table-hover dataTables dataTable dtr-inline" id="DataTables_Table_1" role="grid" aria-describedby="DataTables_Table_1_info">
									<thead>
										<tr>
											<th>Name</th>
											<th>Comments</th>
											<th>Parameters</th>
										</tr>
									</thead>
									<tbody>
										{% for name,lines in service_info.properties %}
										<tr>
											<td>
												<strong>{{ lines.access|join(' ') }}</strong> <i class="text-muted">{{ service_info.object.nom|default(service_info.object.shortName|default(service_info.object)) }}::</i><strong>{{ name }}</strong>
											</td>
											<td>
												{% for line in lines.comments.texts|default([]) %}
												<p class="m-b-xs">{{ line|raw }}</p>
												{% endfor %}
											</td>
											<td>
												{% for key in lines.comments.keys|default([]) %}
												<p class="m-b-xs"><strong>@{{ key.key|raw }}</strong> <i class="text-muted">{{ key.type|default('')|raw }}</i> {{ key.var|default('')|raw }}</p>
												{% endfor %}
											</td>
										</tr>
										{% endfor %}
									</tbody>
								</table>
								<!-- TABLE PROPERTIES : end -->
							</div>
						</div>
					</div>
				</div>
			</div>
			<!-- PANEL PROPERTIES : end -->
			<!-- PANEL METHODS : begin -->
			<div class="panel panel-default">
				<div class="panel-heading">
					<h5 class="panel-title">
						<a data-toggle="collapse" data-parent="#{{ idBlock }}_accordion" href="#{{ idBlock }}_collapse_3"><strong>Methods</strong></a>
					</h5>
				</div>
				<div id="{{ idBlock }}_collapse_3" class="panel-collapse collapse">
					<div class="panel-body">
						<div class="row">
							<div class="col-md-12">
								<!-- TABLE METHODS : begin -->
								<table class="table small table-striped table-bordered table-hover dataTables dataTable dtr-inline" id="DataTables_Table_2" role="grid" aria-describedby="DataTables_Table_2_info">
									<thead>
										<tr>
											<th>Name</th>
											<th>Comments</th>
											<th>Parameters</th>
										</tr>
									</thead>
									<tbody>
										{% for name,lines in service_info.methods %}
											{% set annotations = [] %}
											{% for key in lines.comments.keys|default([]) %}
												{% for annot,color in colors %}
													{% if annot == key.key %}
														{% set annotations = annotations|merge({annot: colors[annot]}) %}
													{% endif %}
												{% endfor %}
											{% endfor %}
										<tr class="{{ annotations|join(' ') }}">
											<td>
												<strong>{{ lines.access|join(' ') }}</strong> <i class="text-muted">{{ service_info.object.nom|default(service_info.object.shortName|default(service_info.object)) }}::</i><strong>{{ name }}()</strong>
												{% if lines.constructor == true %}
												<p class="m-b-none text-warning">* Constructor *</p>
												{% endif %}
												{% if lines.destructor == true %}
												<p class="m-b-none text-warning">* Destructor *</p>
												{% endif %}
											</td>
											<td>
												{% for line in lines.comments.texts|default([]) %}
												<p class="m-b-xs">{{ line|raw }}</p>
												{% endfor %}
											</td>
											<td>
												{% for key in lines.comments.keys|default([]) %}
												<p class="m-b-xs text-{{ colors[key.key]|default('primary') }}">
													<strong class="m-r-xs">@{{ key.key|raw }}</strong>
													{% if key.key in colorsKeys %}
													<span class="text-muted">{% if key.type|default('') != '' %}{{ key.type|raw }} {% endif %}{{ key.var|default('')|raw }}</span>
													{% else %}
													<i class="text-muted m-r-xs">{{ key.type|default('')|raw }}</i>
													{{ key.var|default('')|raw }}
													{% endif %}
												</p>
												{% endfor %}
											</td>
										</tr>
										{% endfor %}
									</tbody>
								</table>
								<!-- TABLE METHODS : end -->
							</div>
						</div>
					</div>
				</div>
			</div>
			<!-- PANEL METHODS : end -->
			{% if showCode %}
			{% if service_info.class.filename|default('')|length > 0 %}
			<!-- PANEL FILE CONTENT : begin -->
			<div class="panel panel-default">
				<div class="panel-heading">
					<h5 class="panel-title">
						<a data-toggle="collapse" data-parent="#{{ idBlock }}_accordion" href="#{{ idBlock }}_collapse_4"><strong>#CODE</strong> <small><i>{{ service_info.class.filename }}</i></small></a>
					</h5>
				</div>
				<div id="{{ idBlock }}_collapse_4" class="panel-collapse collapse">
					<div class="panel-body">
						<div class="row">
							<div class="col-md-12">

								{% set file = fileGetContent(service_info.class.filename) %}
								{% if file != false %}
								<textarea id="code1">{{ file|raw }}</textarea>
								{% else %}
								<p class="text-danger"><i class="fa fa-times m-r-sm"></i>Contenu du fichier illisible.</p>
								{% endif %}

							</div>
						</div>
					</div>
				</div>
			</div>
			<!-- PANEL FILE CONTENT : end -->
			{% endif %}
			{% endif %}
		</div>
	</div>
{%- endmacro %}

{% macro subEntityLink(item) -%}
{%- if(item.shortName == 'pageweb') -%}
{{ path('site_pageweb', {pageweb: item.slug}) }}
{%- else -%}
#
{%- endif -%}
{%- endmacro -%}

{% macro entitehierarchy(hierarchy, id) -%}
	{% import _self as self %}
	{% if id|default(null) != null %}<div id="{{ id }}" class="hierarchy">{% endif %}
		<ul>
			{% for name,data in hierarchy|default([]) %}
			<li class="jstree-open">
				{{ name }}
				{% if data|length > 0 %}
				{{ self.entitehierarchy(data, null) }}
				{% endif %}
			</li>
			{% endfor %}
		</ul>
	{% if id|default(null) != null %}</div>{% endif %}
{%- endmacro -%}

